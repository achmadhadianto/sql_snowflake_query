USE ROLE ACCOUNTADMIN;
USE WAREHOUSE XSMALL_WAREHOUSE;
USE SCHEMA DEMO_DB.DEMO_SCHEMA;

-- Create source table

CREATE TABLE EMPLOYEE_CHANGES LIKE EMPLOYEE;
-- hanya schema, bukan isinya

-- Populate source table

INSERT INTO EMPLOYEE_CHANGES 
VALUES 
    (1, 'Prakash', 'Das', '1987-01-02', 'IND'),
    (3, 'James', 'Lines', '1999-09-21', 'GB'),
    (5, 'Inaaya', 'Andrewson', '2001-01-02', 'US'), 
    (7, 'Kamari', 'Okonkwo', '1999-02-15', 'KE');

SELECT * FROM EMPLOYEE_CHANGES;

-- Merge source into target table

MERGE INTO EMPLOYEE AS E 
USING EMPLOYEE_CHANGES AS EC
ON E.EMP_ID = EC.EMP_ID
WHEN MATCHED THEN
    UPDATE SET E.EMP_FIRST_NAME = EC.EMP_FIRST_NAME, 
               E.EMP_LAST_NAME = EC.EMP_LAST_NAME, 
               E.EMP_DOB = EC.EMP_DOB,
               E.EMP_COUNTRY_CODE = EC.EMP_COUNTRY_CODE
WHEN NOT MATCHED THEN
    INSERT (EMP_ID, EMP_FIRST_NAME, EMP_LAST_NAME, EMP_DOB, EMP_COUNTRY_CODE)
    VALUES (EC.EMP_ID, EC.EMP_FIRST_NAME, EC.EMP_LAST_NAME, EC.EMP_DOB, EC.EMP_COUNTRY_CODE);
-- ID sama nomor 1,3,5 ID hanya di EMPLOYEE nomor 2,4,6, ID hanya di EMPLOYEE_CHANGES nomor 7
-- ID no 1, 3 dan 5 di update ; 2, 4, dan 6 tetap seperti semula ; 7 di Insert

-- Verify target table

SELECT * 
FROM EMPLOYEE
ORDER BY EMP_ID;

-- Repopulate source table

INSERT OVERWRITE INTO EMPLOYEE_CHANGES 
VALUES 
    (2, 'Madiha', 'Bradford', '1975-10-02', 'GBR'),
    (3, 'James', 'Lines', '1999-09-21', 'GBR'),
    (5, 'Inaaya', 'Andrewson', '2001-01-02', 'USA');

MERGE INTO EMPLOYEE AS E 
USING EMPLOYEE_CHANGES AS EC
ON E.EMP_ID = EC.EMP_ID
WHEN MATCHED AND E.EMP_COUNTRY_CODE = 'US'
    THEN UPDATE SET E.EMP_COUNTRY_CODE = EC.EMP_COUNTRY_CODE
WHEN MATCHED AND E.EMP_COUNTRY_CODE = 'GB'
    THEN DELETE 
WHEN NOT MATCHED THEN
    INSERT (EMP_ID, EMP_FIRST_NAME, EMP_LAST_NAME, EMP_DOB, EMP_COUNTRY_CODE)
    VALUES (EC.EMP_ID, EC.EMP_FIRST_NAME, EC.EMP_LAST_NAME, EC.EMP_DOB, EC.EMP_COUNTRY_CODE);

-- Clear down temporary tables

DROP TABLE EMPLOYEE_CHANGES;
